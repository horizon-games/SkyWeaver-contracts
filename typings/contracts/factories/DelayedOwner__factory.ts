/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DelayedOwner } from "../DelayedOwner";

export class DelayedOwner__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _firstOwner: string,
    _delay: BigNumberish,
    overrides?: Overrides
  ): Promise<DelayedOwner> {
    return super.deploy(
      _firstOwner,
      _delay,
      overrides || {}
    ) as Promise<DelayedOwner>;
  }
  getDeployTransaction(
    _firstOwner: string,
    _delay: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_firstOwner, _delay, overrides || {});
  }
  attach(address: string): DelayedOwner {
    return super.attach(address) as DelayedOwner;
  }
  connect(signer: Signer): DelayedOwner__factory {
    return super.connect(signer) as DelayedOwner__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DelayedOwner {
    return new Contract(address, _abi, signerOrProvider) as DelayedOwner;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_firstOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_delay",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "enum DelayedOwner.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "triggerTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct DelayedOwner.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "TransactionCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "enum DelayedOwner.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "triggerTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct DelayedOwner.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "TransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "enum DelayedOwner.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "triggerTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct DelayedOwner.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "TransactionRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum DelayedOwner.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "triggerTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct DelayedOwner.Transaction",
        name: "_tx",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum DelayedOwner.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "triggerTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct DelayedOwner.Transaction",
        name: "_tx",
        type: "tuple",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum DelayedOwner.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "triggerTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct DelayedOwner.Transaction",
        name: "_tx",
        type: "tuple",
      },
    ],
    name: "isValidWitness",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum DelayedOwner.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "triggerTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct DelayedOwner.Transaction",
        name: "_tx",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "txHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610cdf380380610cdf83398101604081905261002f91610081565b600080546001600160a01b0319166001600160a01b03841690811782556040518492907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350608052506100b9565b60008060408385031215610093578182fd5b82516001600160a01b03811681146100a9578283fd5b6020939093015192949293505050565b608051610c0c6100d3600039806104295250610c0c6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063893d20e81161005b578063893d20e8146100bd5780638ee00b01146100db578063bbd7be31146100fb578063f2fde38b1461011b5761007d565b80630b8d6f891461008257806313c03236146100975780633a571f30146100aa575b600080fd5b610095610090366004610746565b61012e565b005b6100956100a5366004610746565b6102b9565b6100956100b8366004610746565b6103bb565b6100c56104cd565b6040516100d29190610829565b60405180910390f35b6100ee6100e9366004610746565b6104e9565b6040516100d2919061084a565b61010e6101093660046107f5565b61052f565b6040516100d29190610855565b61009561012936600461072c565b610541565b80610138816104e9565b61015d5760405162461bcd60e51b8152600401610154906109d2565b60405180910390fd5b60018251600381111561016c57fe5b146101895760405162461bcd60e51b8152600401610154906108bb565b42826020015111156101ad5760405162461bcd60e51b815260040161015490610975565b600282526040516101c2908390602001610b20565b60408051601f19818403018152828252805160209182012060608601516000908152600190925282822055908401516080850151919273ffffffffffffffffffffffffffffffffffffffff9091169161021a9161080d565b6000604051808303816000865af19150503d8060008114610257576040519150601f19603f3d011682016040523d82523d6000602084013e61025c565b606091505b505090508061027d5760405162461bcd60e51b815260040161015490610ae9565b7fc1936d3995bdc418e1e0e60366379b2c6d2ac93f3450b5c7e7ec73251ae7cae8836040516102ac9190610b20565b60405180910390a1505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102f05760405162461bcd60e51b815260040161015490610a2f565b806102fa816104e9565b6103165760405162461bcd60e51b8152600401610154906109d2565b60018251600381111561032557fe5b146103425760405162461bcd60e51b815260040161015490610a8c565b60038252604051610357908390602001610b20565b60408051601f198184030181528282528051602091820120606086015160009081526001909252919020557f9422f7a065bb451f342bdeef1b3d7e28d7fc46cbf354810a5fe9564f4b12b7f3906103af908490610b20565b60405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103f25760405162461bcd60e51b815260040161015490610a2f565b6060810151600090815260016020526040902054156104235760405162461bcd60e51b815260040161015490610918565b61044d427f000000000000000000000000000000000000000000000000000000000000000061061e565b60208201526001818190525060405161046a908290602001610b20565b60408051601f198184030181528282528051602091820120606085015160009081526001909252919020557fbdd51b76bdd72264a2947da4c06802cec9e1c1dad4d5edb21050139962e9c603906104c2908390610b20565b60405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b6000816040516020016104fc9190610b20565b60408051601f1981840301815291815281516020928301206060850151600090815260019093529120541490505b919050565b60016020526000908152604090205481565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105785760405162461bcd60e51b815260040161015490610a2f565b73ffffffffffffffffffffffffffffffffffffffff81166105ab5760405162461bcd60e51b81526004016101549061085e565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821780845560405192939116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b600082820183811015610678576040805162461bcd60e51b815260206004820152601660248201527f536166654d617468236164643a204f564552464c4f5700000000000000000000604482015290519081900360640190fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461052a57600080fd5b600082601f8301126106b3578081fd5b813567ffffffffffffffff808211156106c857fe5b6040516020601f19601f85011682010181811083821117156106e657fe5b60405282815292508284830160200186101561070157600080fd5b8260208601602083013760006020848301015250505092915050565b80356004811061052a57600080fd5b60006020828403121561073d578081fd5b6106788261067f565b600060208284031215610757578081fd5b813567ffffffffffffffff8082111561076e578283fd5b9083019060a08286031215610781578283fd5b60405160a08101818110838211171561079657fe5b6040526107a28361071d565b8152602083013560208201526107ba6040840161067f565b6040820152606083013560608201526080830135828111156107da578485fd5b6107e6878286016106a3565b60808301525095945050505050565b600060208284031215610806578081fd5b5035919050565b6000825161081f818460208701610ba6565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b901515815260200190565b90815260200190565b6020808252602a908201527f4f776e61626c65237472616e736665724f776e6572736869703a20494e56414c60408201527f49445f4144445245535300000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f44656c617965644f776e657223657865637574653a2054585f4e4f545f50454e60408201527f44494e4700000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f44656c617965644f776e65722372656769737465723a2054585f414c5245414460408201527f595f524547495354455245440000000000000000000000000000000000000000606082015260800190565b6020808252602a908201527f44656c617965644f776e6523657865637574653a2054585f4e4f545f5945545f60408201527f45584543555441424c4500000000000000000000000000000000000000000000606082015260800190565b60208082526033908201527f44656c617965644f776e6572236f6e6c7956616c69645769746e65737365733a60408201527f20494e56414c49445f54585f5749544e45535300000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c65236f6e6c794f776e65723a2053454e4445525f49535f4e4f5460408201527f5f4f574e45520000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f44656c617965644f776e65722363616e63656c3a2054585f4e4f545f50454e4460408201527f494e470000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f44656c617965644f776e657223657865637574653a2054585f4641494c454400604082015260600190565b600060208252825160048110610b3257fe5b806020840152506020830151604083015273ffffffffffffffffffffffffffffffffffffffff604084015116606083015260608301516080830152608083015160a08084015280518060c0850152610b918160e0860160208501610ba6565b601f01601f19169290920160e0019392505050565b60005b83811015610bc1578181015183820152602001610ba9565b83811115610bd0576000848401525b5050505056fea2646970667358221220c5ba511e368c4a882d50f4d71a742831163779e4535fe8ae9de9cdee49d9aebc64736f6c63430007040033";
