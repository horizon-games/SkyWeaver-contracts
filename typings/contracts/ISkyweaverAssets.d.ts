/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ISkyweaverAssetsInterface extends ethers.utils.Interface {
  functions: {
    "activateFactory(address)": FunctionFragment;
    "addMintPermission(address,uint256,uint256)": FunctionFragment;
    "batchBurn(uint256[],uint256[])": FunctionFragment;
    "batchMint(address,uint256[],uint256[],bytes)": FunctionFragment;
    "burn(uint256,uint256)": FunctionFragment;
    "getCurrentIssuances(uint256[])": FunctionFragment;
    "getFactoryAccessRanges(address)": FunctionFragment;
    "getFactoryStatus(address)": FunctionFragment;
    "getMaxIssuances(uint256[])": FunctionFragment;
    "lockRangeMintPermissions(tuple)": FunctionFragment;
    "mint(address,uint256,uint256,bytes)": FunctionFragment;
    "removeMintPermission(address,uint256)": FunctionFragment;
    "setMaxIssuances(uint256[],uint256[])": FunctionFragment;
    "shutdownFactory(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "activateFactory",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addMintPermission",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "batchBurn",
    values: [BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchMint",
    values: [string, BigNumberish[], BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "burn",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentIssuances",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getFactoryAccessRanges",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getFactoryStatus",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxIssuances",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "lockRangeMintPermissions",
    values: [{ minID: BigNumberish; maxID: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "mint",
    values: [string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeMintPermission",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaxIssuances",
    values: [BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "shutdownFactory",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "activateFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addMintPermission",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "batchBurn", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "batchMint", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "burn", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentIssuances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFactoryAccessRanges",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFactoryStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxIssuances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lockRangeMintPermissions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mint", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeMintPermission",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaxIssuances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "shutdownFactory",
    data: BytesLike
  ): Result;

  events: {
    "FactoryActivation(address)": EventFragment;
    "FactoryShutdown(address)": EventFragment;
    "MintPermissionAdded(address,tuple)": EventFragment;
    "MintPermissionRemoved(address,tuple)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "FactoryActivation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FactoryShutdown"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MintPermissionAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MintPermissionRemoved"): EventFragment;
}

export class ISkyweaverAssets extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ISkyweaverAssetsInterface;

  functions: {
    activateFactory(
      _factory: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "activateFactory(address)"(
      _factory: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    addMintPermission(
      _factory: string,
      _minRange: BigNumberish,
      _maxRange: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addMintPermission(address,uint256,uint256)"(
      _factory: string,
      _minRange: BigNumberish,
      _maxRange: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    batchBurn(
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "batchBurn(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    batchMint(
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "batchMint(address,uint256[],uint256[],bytes)"(
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    burn(
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "burn(uint256,uint256)"(
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getCurrentIssuances(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    "getCurrentIssuances(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    getFactoryAccessRanges(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<{
      0: { minID: BigNumber; maxID: BigNumber; 0: BigNumber; 1: BigNumber }[];
    }>;

    "getFactoryAccessRanges(address)"(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<{
      0: { minID: BigNumber; maxID: BigNumber; 0: BigNumber; 1: BigNumber }[];
    }>;

    getFactoryStatus(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "getFactoryStatus(address)"(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    getMaxIssuances(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    "getMaxIssuances(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    lockRangeMintPermissions(
      _range: { minID: BigNumberish; maxID: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "lockRangeMintPermissions(tuple)"(
      _range: { minID: BigNumberish; maxID: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    mint(
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "mint(address,uint256,uint256,bytes)"(
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    removeMintPermission(
      _factory: string,
      _rangeIndex: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeMintPermission(address,uint256)"(
      _factory: string,
      _rangeIndex: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setMaxIssuances(
      _ids: BigNumberish[],
      _newMaxIssuances: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setMaxIssuances(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _newMaxIssuances: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    shutdownFactory(
      _factory: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "shutdownFactory(address)"(
      _factory: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  activateFactory(
    _factory: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "activateFactory(address)"(
    _factory: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  addMintPermission(
    _factory: string,
    _minRange: BigNumberish,
    _maxRange: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addMintPermission(address,uint256,uint256)"(
    _factory: string,
    _minRange: BigNumberish,
    _maxRange: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  batchBurn(
    _ids: BigNumberish[],
    _amounts: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "batchBurn(uint256[],uint256[])"(
    _ids: BigNumberish[],
    _amounts: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  batchMint(
    _to: string,
    _ids: BigNumberish[],
    _amounts: BigNumberish[],
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "batchMint(address,uint256[],uint256[],bytes)"(
    _to: string,
    _ids: BigNumberish[],
    _amounts: BigNumberish[],
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  burn(
    _id: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "burn(uint256,uint256)"(
    _id: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getCurrentIssuances(
    _ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getCurrentIssuances(uint256[])"(
    _ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getFactoryAccessRanges(
    _factory: string,
    overrides?: CallOverrides
  ): Promise<
    { minID: BigNumber; maxID: BigNumber; 0: BigNumber; 1: BigNumber }[]
  >;

  "getFactoryAccessRanges(address)"(
    _factory: string,
    overrides?: CallOverrides
  ): Promise<
    { minID: BigNumber; maxID: BigNumber; 0: BigNumber; 1: BigNumber }[]
  >;

  getFactoryStatus(
    _factory: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "getFactoryStatus(address)"(
    _factory: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getMaxIssuances(
    _ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getMaxIssuances(uint256[])"(
    _ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  lockRangeMintPermissions(
    _range: { minID: BigNumberish; maxID: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "lockRangeMintPermissions(tuple)"(
    _range: { minID: BigNumberish; maxID: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  mint(
    _to: string,
    _id: BigNumberish,
    _amount: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "mint(address,uint256,uint256,bytes)"(
    _to: string,
    _id: BigNumberish,
    _amount: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  removeMintPermission(
    _factory: string,
    _rangeIndex: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeMintPermission(address,uint256)"(
    _factory: string,
    _rangeIndex: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setMaxIssuances(
    _ids: BigNumberish[],
    _newMaxIssuances: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setMaxIssuances(uint256[],uint256[])"(
    _ids: BigNumberish[],
    _newMaxIssuances: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  shutdownFactory(
    _factory: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "shutdownFactory(address)"(
    _factory: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    activateFactory(_factory: string, overrides?: CallOverrides): Promise<void>;

    "activateFactory(address)"(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addMintPermission(
      _factory: string,
      _minRange: BigNumberish,
      _maxRange: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "addMintPermission(address,uint256,uint256)"(
      _factory: string,
      _minRange: BigNumberish,
      _maxRange: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    batchBurn(
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchBurn(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchMint(
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "batchMint(address,uint256[],uint256[],bytes)"(
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    burn(
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "burn(uint256,uint256)"(
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getCurrentIssuances(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getCurrentIssuances(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getFactoryAccessRanges(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<
      { minID: BigNumber; maxID: BigNumber; 0: BigNumber; 1: BigNumber }[]
    >;

    "getFactoryAccessRanges(address)"(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<
      { minID: BigNumber; maxID: BigNumber; 0: BigNumber; 1: BigNumber }[]
    >;

    getFactoryStatus(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "getFactoryStatus(address)"(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getMaxIssuances(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getMaxIssuances(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    lockRangeMintPermissions(
      _range: { minID: BigNumberish; maxID: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    "lockRangeMintPermissions(tuple)"(
      _range: { minID: BigNumberish; maxID: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    mint(
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "mint(address,uint256,uint256,bytes)"(
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    removeMintPermission(
      _factory: string,
      _rangeIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeMintPermission(address,uint256)"(
      _factory: string,
      _rangeIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaxIssuances(
      _ids: BigNumberish[],
      _newMaxIssuances: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "setMaxIssuances(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _newMaxIssuances: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    shutdownFactory(_factory: string, overrides?: CallOverrides): Promise<void>;

    "shutdownFactory(address)"(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    FactoryActivation(factory: string | null): EventFilter;

    FactoryShutdown(factory: string | null): EventFilter;

    MintPermissionAdded(factory: string | null, new_range: null): EventFilter;

    MintPermissionRemoved(
      factory: string | null,
      deleted_range: null
    ): EventFilter;
  };

  estimateGas: {
    activateFactory(
      _factory: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "activateFactory(address)"(
      _factory: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    addMintPermission(
      _factory: string,
      _minRange: BigNumberish,
      _maxRange: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addMintPermission(address,uint256,uint256)"(
      _factory: string,
      _minRange: BigNumberish,
      _maxRange: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    batchBurn(
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "batchBurn(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    batchMint(
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "batchMint(address,uint256[],uint256[],bytes)"(
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    burn(
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "burn(uint256,uint256)"(
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getCurrentIssuances(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCurrentIssuances(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFactoryAccessRanges(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFactoryAccessRanges(address)"(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFactoryStatus(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFactoryStatus(address)"(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxIssuances(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMaxIssuances(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lockRangeMintPermissions(
      _range: { minID: BigNumberish; maxID: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    "lockRangeMintPermissions(tuple)"(
      _range: { minID: BigNumberish; maxID: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    mint(
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "mint(address,uint256,uint256,bytes)"(
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    removeMintPermission(
      _factory: string,
      _rangeIndex: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeMintPermission(address,uint256)"(
      _factory: string,
      _rangeIndex: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setMaxIssuances(
      _ids: BigNumberish[],
      _newMaxIssuances: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setMaxIssuances(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _newMaxIssuances: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    shutdownFactory(
      _factory: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "shutdownFactory(address)"(
      _factory: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    activateFactory(
      _factory: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "activateFactory(address)"(
      _factory: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    addMintPermission(
      _factory: string,
      _minRange: BigNumberish,
      _maxRange: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addMintPermission(address,uint256,uint256)"(
      _factory: string,
      _minRange: BigNumberish,
      _maxRange: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    batchBurn(
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "batchBurn(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    batchMint(
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "batchMint(address,uint256[],uint256[],bytes)"(
      _to: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    burn(
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "burn(uint256,uint256)"(
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getCurrentIssuances(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCurrentIssuances(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFactoryAccessRanges(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFactoryAccessRanges(address)"(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFactoryStatus(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFactoryStatus(address)"(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaxIssuances(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMaxIssuances(uint256[])"(
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lockRangeMintPermissions(
      _range: { minID: BigNumberish; maxID: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "lockRangeMintPermissions(tuple)"(
      _range: { minID: BigNumberish; maxID: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    mint(
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "mint(address,uint256,uint256,bytes)"(
      _to: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    removeMintPermission(
      _factory: string,
      _rangeIndex: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeMintPermission(address,uint256)"(
      _factory: string,
      _rangeIndex: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setMaxIssuances(
      _ids: BigNumberish[],
      _newMaxIssuances: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setMaxIssuances(uint256[],uint256[])"(
      _ids: BigNumberish[],
      _newMaxIssuances: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    shutdownFactory(
      _factory: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "shutdownFactory(address)"(
      _factory: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
